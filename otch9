Работа с pipe. Часть 1

Для работы с пайпом можно воспользоваться ситсемными вызовами write() для записи и read() для чтения аналогично тому, как это делалось для записи в файл и чтения из файла. Различая в том, что при чтении из файла информация не исчезает, а байт. пройитанный из пайпа удаляется.
Для создания пайпа используется системный вызов pipe(), которому в качестве параметра должен быть передан массив из двух целых чисел. Элемент массива с индексом 0 используется как файловый дескриптор для чтенрия, а элемент с индексом 1 используется для записи.
Пример:
int fd[2];
pipe(fd);

таблица файловых дескрипторов наследуется дочерным процессом от родительского \, поэтом процесс-ребенок может отправлять информацию через пайп любому своих предков, как же, как и читать информацию, отправленную ими в пайп.
Пайп существует до тех пор, пока хотя бы один из его потоков не закрыт. Для этого нужно, чтобы каждый родственыый проццес завершил работу, или процесс работы явно закрыл входной и выходной потоки.
 
