Процессы в ОС GNU/Linux
Каждый процесс имеет свой идентификтор.
Получить значение идентификатора процесса можно при помощи системного вызова getpid()
Идентификатор родительского процесса возвращается системным вызовом getppid()

Программа, выводящая на экран идентификаторы текущего и родительского:
//Программа, получающая значение идентификатора текущего  и родительского процессов
#include<stdio.h>
#include<sys/types.h>
#include<unistd.h>
#include<stdlib.h>
int main() {
        pid_t prid, parentprid;
        prid = getpid();
        parentprid = getppid();
        printf("Ид. текущего процесса: %d\nИд. родительского процесса: %d\n", prid, parentprid);
        return 0;
}



polyntsev@alexandr-Aspire-Z5751:~/OS_25$ ps
    PID TTY          TIME CMD
  11522 pts/0    00:00:00 bash
  13759 pts/0    00:00:00 ps
polyntsev@alexandr-Aspire-Z5751:~/OS_25$ vim pr003.c
polyntsev@alexandr-Aspire-Z5751:~/OS_25$ gcc pr003.c -o pr003.out
pr003.c:2:9: fatal error: stdic.h: Нет такого файла или каталога
    2 | #include<stdic.h>
      |         ^~~~~~~~~
compilation terminated.
polyntsev@alexandr-Aspire-Z5751:~/OS_25$ vim pr003.c
polyntsev@alexandr-Aspire-Z5751:~/OS_25$ polyntsev@alexandr-Aspire-Z5751:~/OS_25$ gcc pr003.c -o pr003.out

Родительский процессом для запущеной программы является командная оболочка bash, поэтому ее id совподает с id родительского процесса
polyntsev@alexandr-Aspire-Z5751:~/OS_25$ ./pr003.out
Ид. текущего процесса: 14326
Ид. родительского процесса: 11522

После второго запуска программы меняется id текущего процесса, так как предыдущий процесс уже завершился
polyntsev@alexandr-Aspire-Z5751:~/OS_25$ vim pr003.c
polyntsev@alexandr-Aspire-Z5751:~/OS_25$ polyntsev@alexandr-Aspire-Z5751:~/OS_25$ ./pr003.out
Ид. текущего процесса: 14500
Ид. родительского процесса: 11522

